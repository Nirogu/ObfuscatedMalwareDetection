"""Image classification performance. Helper script."""
from subprocess import Popen, DEVNULL
from time import sleep
from psutil import Process
from numpy import mean

# Define measurements parameters
models = ["resnet18", "resnet34", "efficientnet_b3", "efficientnetv2_rw_s"]
samples = range(1, 10002, 500)
repetitions = 20

# Create log file
with open("performance.csv", "w", encoding="utf8") as logs:
    logs.write("model,num_samples,time,memory_usage\n")

for _ in range(repetitions):
    for model_name in models:
        for num_samples in samples:

            memories = []

            # execute prediction process
            with Popen(
                [
                    "python",
                    "performance_helper.py",
                    model_name,
                    str(num_samples),
                ],
                stderr=DEVNULL,
            ) as process:
                ps = Process(process.pid)

                # Measure memory consumption
                while process.poll() is None:
                    memories.append(ps.memory_info().rss / (2**30))
                    sleep(0.5)

            # Log results
            with open("performance.csv", "a", encoding="utf8") as logs:
                logs.write(f",{mean(memories)}\n")
